'''Функции высшего порядка принимают другие функции в качестве аргументов, либо возвращают их как результат'''
def apply_twice(func, arg): #функция высшего порядка
    return func(func(arg))
def add_five(x): #аргумент функции высшего порядка
    return x + 5
print(apply_twice(add_five, 10))

#пример
def test(func, arg):
    return func(func(arg))
def mult(x):
    return x * x
print(test(mult, 2))

'''Чистые функции не имеют побочных эффектов, возвращают значение которое зависит только от своих аргументов'''
#Чистая функция
def pure_function (x, y): 
    temp = x + 2*y
    return temp / (2*x + y)
#Нечистая функция
solo_list = []
def impure(arg):
    some_list.append(arg) #Метод append - добавляет элемент в конец списка

#Пример чистой функции
def func(x):
    y = x**2
    z = x +y
    return z
'''После того как функци обработала некоторый ввод, результат может быть сохранен и взят в следующий раз. Таким образом функцию не нужно вызывать снова, это называется мемоизация.'''
