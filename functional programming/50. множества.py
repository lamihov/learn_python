'''Множества - структуры данных подобные спискам или словарям. Они создаются с помощью фигурных скобок или функции set. Некоторые функции аналогичны функциям списков, используются in для проверки наличия элемента'''
num_set = {1, 2, 3, 4, 5}
word_set = set(["spam", "eggs", "sausage"])
print( 3 in num_set)
print("spam" not in word_set)

#пример
letters = {"a", "b", "c", "d"}
if "e" not in letters:
    print(1)
else:
    print(2)

'''Множества неупорядоченны, то есть не могут быть проиндексированы. Нельзя чтобы они содержали дубликаты.
Вместо метода append, для добавления нового элемента используется .add.
Метод .remove удаляет определенный элемент из множества; Метод .pop удаляет произвольный элемент'''
nums = {1, 2, 1, 3, 1, 4, 5, 6}
print(nums)
nums.add(-7)
nums.remove(3)
print(nums)

#пример
numss={"a", "b", "c", "d"}
numss.add("z")
print(len(numss))

'''Над множествами можно проводить операции. 
Оператор (|) - объединяет два множества в одно, содержащее все элементы двух множеств
Оператор(&) - пересечения возвращает элементы, которые содержатся в двух множествах
Оператор (-) - разности, возвращает элементы только с первого множества.
Оператор (^) - симметрической разности, возвращает все элементы с обоих множеств, кроме принадлежащих одновременно обоим'''
first = {1, 2, 3, 4, 5, 6}
second = {4, 5, 6, 7, 8, 9}
print(first | second)
print(first & second)
print(first - second)
print(second - first)
print(first ^ second)

#пример
a = {1, 2, 3}
b = {0, 3, 4, 5}
print(a&b)
''' В Python реализованы структуры данных: списки, словари, кортежи, множества. 
Когда используется словарь (изменяем):
- Когда требуется установить связь пары ключ:значение
- Когда нужно провести быстрый поиск по данным, используя ключ
- Когда данные нужно часто изменять
Когда использовать другие типы:
- используются списки, когда есть база данных, к который не нужен произвольный доступ
- используются множества, когда вам нужны уникальные элементы
- используются кортежи, когда данные не будут изменяться'''