'''
Cоздание, использование и уничтожение составляют жизненный цикл объекта.
- Первый этап жизненного цикла объекта - определение класса, к которому он принадлежит.
- Следующий этап - инстанцирование экземпляра, когда вызывается метод __init__. Выделяется память под хранение экземпляра. 
Непосредственно перед этим вызывается метод класса __new__. Это действие, как правило, отменяется только в редких случаях.
После этого объект готов к использованию.
'''
'''
Когда объект уничтожается, выделенная для него память освобождается и может быть использована для других целей.
Уничтожение объекта происходит тогда, когда количество ссылок на него достигнет нуля. Количество ссылок - это число переменных и других элементов, которые ссылаются на объект.
Если на объект ничто не ссылается (количество ссылок равно нулю), ничто не взаимодействует с ним, так что его можно смело удалить.
В некоторых ситуациях, два (или более) объекта могут ссылаться только друг на друга, и, следовательно, также могут быть удалены.
Инструкция del уменьшает число ссылок объекта на единицу, что часто приводит к его удалению.
Для инструкции del используется магический метод __del__.
Процесс удаления ненужных объектов называется сборкой мусора.
Когда же объекту присваивается новое имя или его включают в контейнер (список, кортеж, словарь), 
количество ссылок на него увеличивается на единицу. Число ссылок объекта уменьшается, когда он удаляется 
с помощью инструкции del, одна из его ссылок была переназначена, или когда его ссылка указывает на элемент 
за рамками доступного диапазона. Когда количество ссылок объекта достигает нуля, Python автоматически удаляет его.
'''
#пример
a = 42 # создание объекта <42>
b = a # создание ссылки <42>
c = [a] # создание ссылки <42>

del a # удаление ссылки <42>
b = 100 # удаление ссылки <42>
c[0] = -1 # # удаление ссылки <42>