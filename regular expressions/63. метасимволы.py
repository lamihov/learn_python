'''
Регулярные выражения эффективней обычных строковых методов.
Они позволяют выражать с помощью регулярных выражений такие сложные условия, как «одно или несколько повторений гласных».
Существование метасимволов несколько усложняет создание регулярных выражений, состоящих из обычных символов, 
являющихся также метасимволами, например, $. В таких случаях метасимволы необходимо экранировать, ставя перед ними обратную косую черту.
Хотя такой способ также может создать проблемы, так как обратные косые черты также имеют функцию экранирования в коде Python. 
По этой причине может потребоваться три или четыре бэкслэша в строке.
'''
str =r"I am \r \a \w!"

#Первый метасимвол, с которым мы познакомимся - . (точка). Точка означает любой символ, исключая символ новой строки.

import re

pattern = r"gr.y" #задание паттерна для поиска

if re.match(pattern, "grey"):
    print("Match 1")

if re.match(pattern, "gray"):
    print("Match 2")

if re.match(pattern, "blue"):
    print("Match 3")

#Далее рассмотрим метасимволы ^ и $. Они указывают соответственно на начало и конец строки.

import re 

pattern = r"^gr.y$" 

if re.match(pattern, "grey"): 
    print("Match 1") 

if re.match(pattern, "gray"): 
    print("Match 2") 

if re.match(pattern, "stingray"): 
    print("Match 3") 

#Набор символов «^gr.y$» означает, что строка должна начинаться с gr, в середине содержать любой символ, за исключением символа новой строки, и заканчиваться на у