'''
В качестве демонстрации использования регулярных выражений, напишем программу извлечения адресов электронной почты из программной строки.
Предположим, у нас есть некоторый текст, содержащий адреса электронной почты:
'''
str = "Please contact info@python.org for assistance"

'''Наша задача состоит в том, чтобы извлечь подстроку «info@python.org».
Как правило, адрес электронной почты состоит из слов и может содержать точки или черточки.
Далее следует знак @ и имя домена (имя, точка и суффикс доменного имени).
Возмем это в качестве основы для нашего регулярного выражения.
'''

pattern = r"([\w\.-]+)@([\w\.-]+)(\.[\w\.]+)"

'''
[\w\.-]+ соответствует одному или более символу слова, точке или черточке.
В регулярном выражении, строка должна содержать слово (возможно, с точками и черточками), затем знак @, другое слово, точку и еще одно слово.
В нашем регулярном выражении три группы:
1 - первая часть адреса электронной почты
2 - доменное имя без суффикса
3 - суффикс доменного имени.
'''
import re

pattern = r"([\w\.-]+)@([\w\.-]+)(\.[\w\.]+)"
str = "Please contact info@python.org for assistance"

match = re.search(pattern, str)
if match:
    print(match.group())

#если строка содержит несколько адресов электронной почты, мы могли бы использовать метод re.findall вместо re.search, чтобы извлечь все адреса