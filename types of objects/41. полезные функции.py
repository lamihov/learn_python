'''
join - объединение последовательностей строк с использованием другой строки в качестве разделителя
replace - замена одной подстроки на другую
starswith и endswith - определяют, есть ли подстрока соответственно в начале или в конце строки
Для изменения регистра строки используются методы lower(нижний) и upper(верхний)
Метод split - противоположный join, делает из строки с определенным списком
'''
print (" , ".join(["spam", "eggs", "ham"])) #функция join
print ("Hello ME".replace("ME", "world")) #функция replace
print("This is a sentence".startswith("This")) #функция startswith
print("This is a sentence".endswith("sentence")) #функция endswith
print("This is a sentence".upper()) #функция upper
print("spam, eggs, ham".split(", ")) #функция split

#Заполните пропуски так, чтобы сделать строку заглавными буквами
a = "Spam"
b = a.upper()
print(b)
'''
Чтобы найти наименьшее или наибольшее число или элемент из списка, используются функции max и min
Чтобы расстояние числа от нуля (абсолютную величину), используется функцию abs
Чтобы округлить число до определенного количества знаков после запятой, используется функция round
Чтобы сложить числа в списке используется функция sum
'''
print(min(1, 2, 3, 4, 0, 2, 1)) #функция min
print(max([1, 4, 9, 2, 5, 6, 8])) #функция max
print (abs(-99)) #функция abs
print(sum([1, 2, 3, 4, 5])) #функция sum

#Каким будет результат этого кода?
a = min([sum([11, 22]), max(abs(-30), 2)])
print(a)
'''
Функции all и any, часто используемум в условных инструкциях, можно присваивать в качестве аргумента; 
Значение True возвращается, когда любой их аргумент (или соответственно все аргументы) возвращает True, в противном случае False
Функция enumerate может быть использована для одновременного перебора значений и показателей списка
'''
nums = [55, 44, 33, 22, 11]
if all([i > 5 for i in nums]):
    print("All larger then 5 / Все больше чем 5")
if any([i % 2 == 0 for i in nums]):
    print("At least one is even / По крайней мере один четный")
for v in enumerate(nums):
    print(v)
#Что вернет этот код? 
nums = [-1, 2, -3, 4, -5]
for all([abs(i) < 3 for i in nums]):
    print(1)
else:
    print(2)